generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  draft
  paid
  cancelled
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String
  roleId       Int
  role         Role     @relation(fields: [roleId], references: [id])
  createdAt    DateTime @default(now())

  orders Order[] @relation("UserOrders")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id         Int       @id @default(autoincrement())
  sku        String    @unique
  name       String
  price      Decimal   @db.Decimal(12, 2)
  stock      Int       @default(0)
  isActive   Boolean   @default(true)
  imageUrl   String?
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())

  orderItems OrderItem[]
}

model Order {
  id             Int         @id @default(autoincrement())
  orderNumber    String      @unique
  cashierId      Int
  cashier        User        @relation("UserOrders", fields: [cashierId], references: [id])
  status         OrderStatus @default(draft)
  subtotal       Decimal     @default(0) @db.Decimal(12, 2)
  discountAmount Decimal     @default(0) @db.Decimal(12, 2)
  taxAmount      Decimal     @default(0) @db.Decimal(12, 2)
  grandTotal     Decimal     @default(0) @db.Decimal(12, 2)
  paidAt         DateTime?
  createdAt      DateTime    @default(now())
  items          OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  qty       Int
  price     Decimal @db.Decimal(12, 2)
  lineTotal Decimal @db.Decimal(12, 2)
}
